<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.zerock</groupId>
	<artifactId>controlle</artifactId>
	<name>AAA01</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>5.0.7.RELEASE</org.springframework-version>
		<org.aspectj-version>1.9.0</org.aspectj-version>
		<org.slf4j-version>1.7.25</org.slf4j-version>
	</properties>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		





		
		
		<!-- =================================================================================================================================  -->
		<!-- 설정 변경 
			1. servlet 2.5 에서  3.1.0 으로 수정 ,그리고 afractId 도 javax.servlet-api 수정 한다.
			2. Servlet 3.1 버전을 제대로 활용하고 , JDK8 의 기능을 활용하기 위해서 Maven 관련 plugin Java 번전을 1.8로 수정 한다.
			3. log4.xml 헤더 부분 수정하기    <!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
			4. 오라클 사용자 와 테이블 생성 책 75 페이지 와 175 페이지 , 8080 포트 확인후 9090으로  변경 책 77 페이지
			
			5. root-context.xml 
			   1) 네임스페이스 mybatis-spring 추가 하기 
			   2) DataSource 와  MyBatis 의 설정 추가    책 176 페이지
			   
			6. src/main/resources 하위에   log4jdbc.log4j2.properties 파일 추가 
					아래 내용 추가		
					   log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
			   
			7. 프로젝트 정살 실행 확인 위해  
			
			8. 라이블러리 빌드패스 , employment 확인 및 추가
			
			[기타 1] . pom.xml에 log4j 1.2.17로 변경 그리고 밑에 excucion 관련내용 삭제 한다 페이지 BoardServiceImpl 에 Log4j 적용이 되지않아 이렇게 하였다 . 2020/08/20  
		-->
		
		
		<!-- spring-test , spring-jdbc , spring-tx  디펜던스 추가 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
		</dependency> 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency> 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>   
		
		<!-- MybBtis 사용 == HikariCP , MyBatis , mybatis-spring, log4jdbc-log4j2 라이브러리 추가 -->
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    <version>2.7.8</version>
		</dependency>

		
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.4.6</version>
		</dependency>
		
		
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.2</version>
		</dependency>
				
		
		<dependency>
		    <groupId>org.bgee.log4jdbc-log4j2</groupId>
		    <artifactId>log4jdbc-log4j2-jdbc4</artifactId>
		    <version>1.16</version>
		</dependency>
		
		
		
		
		
		<!-- junit 과 lombok 추가    junit 은 4.12 버전 으로 변경-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.0</version>
			<scope>provided</scope>
		</dependency> 
		
			<!-- Rest : json 도구 (core, dataformat, gson 라이브러리) -->
			<dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-databind</artifactId>
			    <version>2.9.6</version>
			</dependency>
			
			<dependency>
			    <groupId>com.fasterxml.jackson.dataformat</groupId>
			    <artifactId>jackson-dataformat-xml</artifactId>
			    <version>2.8.2</version>
			</dependency>
			
			<!-- Rest : java 인스턴스를 JSON 타입의  문자열로 변환 하기 위해여 gson 라이브러리 추가-->
			<dependency>
			    <groupId>com.google.code.gson</groupId>
			    <artifactId>gson</artifactId>
			    <version>2.8.2</version>
			</dependency>
			
			<!-- Json 관련 설정 
				1. 위에꺼 두개 추가
				2. 자바 버전 1.8.0   그리고 스프링 버전 5.0.7
				3. 메이븐 플러그인 버전 2.5.1   소스 타겟 -> 1.8
				4. 서블릿 3.1.0
				5. 롬복 1.18.0
				6. junit 4.12 
				7. spring-test 관련 모듈 있는지 확인 할것
				8. 메이븐 업데이트 ㄱㄱ 
			 -->
		
		<!-- =========================================================================================================================== -->
		
		
		
	</dependencies>
   
   
   
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
